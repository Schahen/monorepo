buildscript {
  ext.kotlin_version = '1.2.31'
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

group 'org.shabunc.kotlinjs'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}


apply plugin: 'kotlin2js'
compileKotlin2Js {
  kotlinOptions.outputFile = "${buildDir}/web/app.js"
  //kotlinOptions.moduleKind = "commonjs"
  kotlinOptions.sourceMap = true
}


apply plugin: 'war'
war {
  from("${buildDir}/web") {
    include "**/*.*"
    into '/static'
  }
}

dependencies {
  compileOnly "org.eclipse.jetty:jetty-runner:9.4.9.v20180320"
  runtime "org.eclipse.jetty:jetty-deploy:9.4.9.v20180320"
  compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
}

task assembleWeb(type: Sync) {
  configurations.compile.each { File file ->
    from(zipTree(file.absolutePath), {
      includeEmptyDirs = false
      include { fileTreeElement ->
        def path = fileTreeElement.path
        path.endsWith(".js") && (path.startsWith("META-INF/resources/") ||
            !path.startsWith("META-INF/"))
      }
    })
  }
  from compileKotlin2Js.destinationDir
  into "${buildDir}/web/lib"

  dependsOn classes
}

task runJetty(type: JavaExec) {
  classpath = sourceSets.main.compileClasspath + sourceSets.main.runtimeClasspath

  main = 'org.eclipse.jetty.runner.Runner'

  // arguments to pass to the application
  args "--config", "deploy.xml", "${war.archivePath}"
}

assemble.dependsOn assembleWeb
build.dependsOn compileKotlin2Js
